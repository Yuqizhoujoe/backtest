# Logging Configuration for Options Backtesting System

version: 1
disable_existing_loggers: false

formatters:
  detailed:
    format: '%(asctime)s - %(name)s - %(levelname)s - %(funcName)s:%(lineno)d - %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'
  
  simple:
    format: '%(asctime)s - %(levelname)s - %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'
  
  json:
    format: '{"timestamp": "%(asctime)s", "level": "%(levelname)s", "logger": "%(name)s", "function": "%(funcName)s", "line": %(lineno)d, "message": "%(message)s"}'
    datefmt: '%Y-%m-%d %H:%M:%S'
  
  trading:
    format: '%(asctime)s | %(levelname)s | %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: simple
    stream: ext://sys.stdout
  
  file:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    formatter: detailed
    filename: logs/backtest.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf-8
  
  error_file:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: detailed
    filename: logs/errors.log
    maxBytes: 5242880   # 5MB
    backupCount: 3
    encoding: utf-8
  
  trading_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: trading
    filename: logs/trading.log
    maxBytes: 10485760  # 10MB
    backupCount: 10
    encoding: utf-8
  
  performance_file:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    formatter: json
    filename: logs/performance.log
    maxBytes: 5242880   # 5MB
    backupCount: 5
    encoding: utf-8

loggers:
  options_backtest:
    level: DEBUG
    handlers: [console, file, error_file]
    propagate: false
  
  options_backtest.trading:
    level: INFO
    handlers: [console, trading_file, error_file]
    propagate: false
  
  options_backtest.performance:
    level: DEBUG
    handlers: [performance_file]
    propagate: false
  
  options_backtest.data:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  options_backtest.strategy:
    level: INFO
    handlers: [console, file, trading_file]
    propagate: false
  
  options_backtest.portfolio:
    level: INFO
    handlers: [console, file, trading_file]
    propagate: false
  
  options_backtest.risk:
    level: WARNING
    handlers: [console, file, error_file]
    propagate: false
  
  # Third-party library loggers
  ib_insync:
    level: WARNING
    handlers: [file]
    propagate: false
  
  sqlalchemy:
    level: WARNING
    handlers: [file]
    propagate: false
  
  sqlalchemy.engine:
    level: WARNING
    handlers: [file]
    propagate: false
  
  urllib3:
    level: WARNING
    handlers: [file]
    propagate: false

root:
  level: INFO
  handlers: [console, file]

# Additional configuration for specific environments
# Override these settings in environment-specific files

# Development environment (higher verbosity)
dev:
  loggers:
    options_backtest:
      level: DEBUG
    options_backtest.data:
      level: DEBUG
    sqlalchemy.engine:
      level: INFO  # Show SQL queries in dev

# Production environment (lower verbosity, more focused logging)
prod:
  handlers:
    console:
      level: WARNING  # Only warnings and errors to console
  loggers:
    options_backtest:
      level: INFO
    options_backtest.performance:
      level: INFO
    options_backtest.data:
      level: WARNING

# Testing environment (minimal logging to avoid noise)
test:
  handlers:
    console:
      level: ERROR
    file:
      level: WARNING
  loggers:
    options_backtest:
      level: WARNING